Data Structures

Arrays
- Constant time access. Python list

Singly-Linked List
- Can have Head or Head/Tail
- Pointers 1 direction

Doubly-Linked List
- Pointers both directions

Stacks
- LIFO

Queues
- FIFO

Trees
- Binary Search Tree
	- Specific rules for children nodes
- Root, Node, Leaf
- Height of a tree
- Size (number of nodes in tree.left and tree.right

Tree Traversal
- Depth-first
	- Traverse one sub-tree before exploring a sibling sub-tree
- Breadth-first
	- Traverse all nodes at one level before progressing to another level
	
Priority Queues
- Python heapq
- Generalization of a queue where each element is assigned a priority and elements come out in order by priority
- Binary Heap
	- Common way of implementing a priority queue
	- Binary max-heap is a binary tree where the value of each node is at least the values of its children (parent > children)
	- Binary min-heap is a binary tree where the value of each node is at most the values of its children (parent < children)
	
Disjoint Sets
- Maze problem with 2 elements belonging to same set or not
- Membership check, Union
- Trees for Disjoint Sets
	- When merging trees, choose to create shallow resulting tree (smallest height) due to runtime advantage for Find()
	- Hang the shorter one under the root of a taller one (adjust the pointer on the root of the shorter tree)
		- AKA Union By Rank Heuristic